{"ast":null,"code":"var _jsxFileName = \"D:\\\\MiniProject\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Define API URL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8000\";\nfunction App() {\n  _s();\n  var _forgeryMessage$match;\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(\"\");\n  const [processedUrl, setProcessedUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [dragActive, setDragActive] = useState(false);\n  const [outputPath, setOutputPath] = useState(\"\");\n  const [forgeryMessage, setForgeryMessage] = useState(\"\");\n  const inputRef = useRef(null);\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFileChange({\n        target: {\n          files: [e.dataTransfer.files[0]]\n        }\n      });\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // Validate file type\n    if (!file.type.startsWith('image/') && !file.type.startsWith('video/')) {\n      setMessage(\"❌ Please upload an image or video file\");\n      return;\n    }\n    setSelectedFile(file);\n    setPreviewUrl(URL.createObjectURL(file));\n    setProcessedUrl(\"\");\n    setSuccess(false);\n    setMessage(\"\");\n    setOutputPath(\"\");\n    setForgeryMessage(\"\");\n  };\n  const handleUpload = async endpoint => {\n    setMessage(\"\");\n    setProcessedUrl(null);\n    setOutputPath(\"\");\n    setForgeryMessage(\"\");\n    setLoading(true);\n    if (!selectedFile) {\n      setMessage(\"❌ Please select a file first\");\n      setLoading(false);\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      const response = await axios.post(`${API_URL}/${endpoint}/`, formData, {\n        responseType: endpoint === \"detect-video\" ? \"json\" : \"blob\",\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (endpoint === \"detect-video\") {\n        // Handle video response\n        setOutputPath(response.data.message.split(\": \")[1]);\n        if (response.data.forgery_detection) {\n          setForgeryMessage(response.data.forgery_detection.message);\n        }\n        setMessage(\"✅ Video processed successfully!\");\n      } else {\n        // Handle image response\n        const blob = new Blob([response.data], {\n          type: \"image/jpeg\"\n        });\n        const outputUrl = URL.createObjectURL(blob);\n        setProcessedUrl(outputUrl);\n\n        // Convert blob to text to read the logs\n        const text = await blob.text();\n        const lines = text.split('\\n');\n\n        // Find output path from logs\n        const outputLine = lines.find(line => line.includes(\"Processed image saved to:\"));\n        if (outputLine) {\n          const outputFilePath = outputLine.split(\"Processed image saved to:\")[1].trim();\n          setOutputPath(outputFilePath);\n        }\n\n        // Find forgery result from logs\n        const forgeryLine = lines.find(line => line.includes(\"Forgery detection result:\"));\n        if (forgeryLine) {\n          const forgeryResult = forgeryLine.split(\"Forgery detection result:\")[1].trim();\n          setForgeryMessage(forgeryResult);\n        }\n        setMessage(/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            whiteSpace: 'pre-line'\n          },\n          children: [\"\\u2705 Image processed successfully!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), \"Processed Image saved to\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), \"backend/backend/output\", outputPath && `\\nProcessed image saved to: ${outputPath}`, forgeryMessage && `\\n${forgeryMessage}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this));\n      }\n      setSuccess(true);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error:\", error);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"❌ Error processing file. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleButtonClick = () => {\n    var _inputRef$current;\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SecureVision\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Real-Time Weapon and Forgery Detection System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      onDragEnter: handleDrag,\n      onDragLeave: handleDrag,\n      onDragOver: handleDrag,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \"image/*,video/*\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `file-upload-label ${dragActive ? 'drag-active' : ''}`,\n        onClick: handleButtonClick,\n        children: \"\\uD83D\\uDCC1 Choose File or Drag & Drop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-info\",\n        children: [\"Selected: \", selectedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), previewUrl && (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.type.startsWith(\"image\")) && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewUrl,\n        alt: \"Uploaded Preview\",\n        className: \"preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), previewUrl && (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.type.startsWith(\"video\")) && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: previewUrl,\n        controls: true,\n        className: \"preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-animation\",\n        children: \"\\u2714\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpload(\"detect-image\"),\n          disabled: loading || !selectedFile || !selectedFile.type.startsWith(\"image\"),\n          children: \"\\uD83D\\uDDBC\\uFE0F Process Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpload(\"detect-video\"),\n          disabled: loading || !selectedFile || !selectedFile.type.startsWith(\"video\"),\n          children: \"\\uD83C\\uDFA5 Process Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      style: {\n        whiteSpace: 'pre-line'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }, this), (processedUrl || outputPath) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [processedUrl && (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.type.startsWith(\"image\")) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: processedUrl,\n          alt: \"Processed\",\n          className: \"output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }, this)\n      }, void 0, false), outputPath && (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.type.startsWith(\"video\")) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-result\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-path\",\n            children: [\"\\u2705 Video processed and saved to: \", outputPath]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this), forgeryMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `forgery-result ${forgeryMessage.toLowerCase().includes('authentic') ? 'authentic' : 'forged'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Video is \", forgeryMessage.toLowerCase().includes('authentic') ? 'authentic' : 'forged', \" with \", (_forgeryMessage$match = forgeryMessage.match(/\\d+\\.\\d+/)) === null || _forgeryMessage$match === void 0 ? void 0 : _forgeryMessage$match[0], \"% confidence\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"rlWZJIo/hpBzZUIANJF3pYCl0o4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","App","_s","_forgeryMessage$match","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","processedUrl","setProcessedUrl","loading","setLoading","success","setSuccess","message","setMessage","dragActive","setDragActive","outputPath","setOutputPath","forgeryMessage","setForgeryMessage","inputRef","handleDrag","e","preventDefault","stopPropagation","type","handleDrop","dataTransfer","files","handleFileChange","target","event","file","startsWith","URL","createObjectURL","handleUpload","endpoint","formData","FormData","append","response","post","responseType","headers","data","split","forgery_detection","blob","Blob","outputUrl","text","lines","outputLine","find","line","includes","outputFilePath","trim","forgeryLine","forgeryResult","style","whiteSpace","children","fileName","_jsxFileName","lineNumber","columnNumber","error","_error$response","_error$response$data","console","detail","handleButtonClick","_inputRef$current","current","click","className","onDragEnter","onDragLeave","onDragOver","onDrop","ref","onChange","accept","display","onClick","name","src","alt","controls","disabled","toLowerCase","match","_c","$RefreshReg$"],"sources":["D:/MiniProject/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Define API URL\nconst API_URL = \"http://localhost:8000\";\n\nfunction App() {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [previewUrl, setPreviewUrl] = useState(\"\");\n    const [processedUrl, setProcessedUrl] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [dragActive, setDragActive] = useState(false);\n    const [outputPath, setOutputPath] = useState(\"\");\n    const [forgeryMessage, setForgeryMessage] = useState(\"\");\n    const inputRef = useRef(null);\n\n    const handleDrag = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\n            setDragActive(true);\n        } else if (e.type === \"dragleave\") {\n            setDragActive(false);\n        }\n    };\n\n    const handleDrop = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setDragActive(false);\n        \n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n            handleFileChange({ target: { files: [e.dataTransfer.files[0]] } });\n        }\n    };\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        // Validate file type\n        if (!file.type.startsWith('image/') && !file.type.startsWith('video/')) {\n            setMessage(\"❌ Please upload an image or video file\");\n            return;\n        }\n\n        setSelectedFile(file);\n        setPreviewUrl(URL.createObjectURL(file));\n        setProcessedUrl(\"\");\n        setSuccess(false);\n        setMessage(\"\");\n        setOutputPath(\"\");\n        setForgeryMessage(\"\");\n    };\n\n    const handleUpload = async (endpoint) => {\n        setMessage(\"\");\n        setProcessedUrl(null);\n        setOutputPath(\"\");\n        setForgeryMessage(\"\");\n        setLoading(true);\n\n        if (!selectedFile) {\n            setMessage(\"❌ Please select a file first\");\n            setLoading(false);\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(\"file\", selectedFile);\n\n        try {\n            const response = await axios.post(\n                `${API_URL}/${endpoint}/`,\n                formData,\n                {\n                    responseType: endpoint === \"detect-video\" ? \"json\" : \"blob\",\n                    headers: {\n                        \"Content-Type\": \"multipart/form-data\",\n                    },\n                }\n            );\n\n            if (endpoint === \"detect-video\") {\n                // Handle video response\n                setOutputPath(response.data.message.split(\": \")[1]);\n                if (response.data.forgery_detection) {\n                    setForgeryMessage(response.data.forgery_detection.message);\n                }\n                setMessage(\"✅ Video processed successfully!\");\n            } else {\n                // Handle image response\n                const blob = new Blob([response.data], { type: \"image/jpeg\" });\n                const outputUrl = URL.createObjectURL(blob);\n                setProcessedUrl(outputUrl);\n                \n                // Convert blob to text to read the logs\n                const text = await blob.text();\n                const lines = text.split('\\n');\n                \n                // Find output path from logs\n                const outputLine = lines.find(line => line.includes(\"Processed image saved to:\"));\n                if (outputLine) {\n                    const outputFilePath = outputLine.split(\"Processed image saved to:\")[1].trim();\n                    setOutputPath(outputFilePath);\n                }\n                \n                // Find forgery result from logs\n                const forgeryLine = lines.find(line => line.includes(\"Forgery detection result:\"));\n                if (forgeryLine) {\n                    const forgeryResult = forgeryLine.split(\"Forgery detection result:\")[1].trim();\n                    setForgeryMessage(forgeryResult);\n                }\n                \n                setMessage(\n                    <span style={{ whiteSpace: 'pre-line' }}>\n                        ✅ Image processed successfully!\n                        <br/>Processed Image saved to \n                        <br/>backend/backend/output\n                        {outputPath && `\\nProcessed image saved to: ${outputPath}`}\n                        {forgeryMessage && `\\n${forgeryMessage}`}\n                    </span>\n                );\n            }\n            setSuccess(true);\n        } catch (error) {\n            console.error(\"Error:\", error);\n            setMessage(\n                error.response?.data?.detail ||\n                    \"❌ Error processing file. Please try again.\"\n            );\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleButtonClick = () => {\n        inputRef.current?.click();\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>SecureVision</h1>\n            <p>Real-Time Weapon and Forgery Detection System</p>\n\n            <div \n                className=\"upload-section\"\n                onDragEnter={handleDrag}\n                onDragLeave={handleDrag}\n                onDragOver={handleDrag}\n                onDrop={handleDrop}\n            >\n                <input\n                    ref={inputRef}\n                    type=\"file\"\n                    onChange={handleFileChange}\n                    accept=\"image/*,video/*\"\n                    style={{ display: 'none' }}\n                />\n                \n                <div \n                    className={`file-upload-label ${dragActive ? 'drag-active' : ''}`}\n                    onClick={handleButtonClick}\n                >\n                    📁 Choose File or Drag & Drop\n                </div>\n\n                {selectedFile && (\n                    <div className=\"file-info\">\n                        Selected: {selectedFile.name}\n                    </div>\n                )}\n\n                {/* Preview Image or Video */}\n                {previewUrl && selectedFile?.type.startsWith(\"image\") && (\n                    <img src={previewUrl} alt=\"Uploaded Preview\" className=\"preview\" />\n                )}\n\n                {previewUrl && selectedFile?.type.startsWith(\"video\") && (\n                    <video src={previewUrl} controls className=\"preview\" />\n                )}\n\n                {/* Loader and Success Animation */}\n                {loading && <div className=\"loader\"></div>}\n                {success && <div className=\"success-animation\">✔</div>}\n\n                <div className=\"button-group\">\n                    <button \n                        onClick={() => handleUpload(\"detect-image\")}\n                        disabled={loading || !selectedFile || !selectedFile.type.startsWith(\"image\")}\n                    >\n                        🖼️ Process Image\n                    </button>\n                    <button \n                        onClick={() => handleUpload(\"detect-video\")}\n                        disabled={loading || !selectedFile || !selectedFile.type.startsWith(\"video\")}\n                    >\n                        🎥 Process Video\n                    </button>\n                </div>\n            </div>\n\n            {/* Message after processing */}\n            {message && <p className=\"success-message\" style={{ whiteSpace: 'pre-line' }}>{message}</p>}\n\n            {/* Processed Output */}\n            {(processedUrl || outputPath) && (\n                <div className=\"result-container\">\n                    {processedUrl && selectedFile?.type.startsWith(\"image\") && (\n                        <>\n                            <img src={processedUrl} alt=\"Processed\" className=\"output\" />\n                        </>\n                    )}\n                    \n                    {outputPath && selectedFile?.type.startsWith(\"video\") && (\n                        <>\n                            <div className=\"video-result\">\n                                <div className=\"output-path\">\n                                    ✅ Video processed and saved to: {outputPath}\n                                </div>\n                            </div>\n                            {forgeryMessage && (\n                                <div className={`forgery-result ${forgeryMessage.toLowerCase().includes('authentic') ? 'authentic' : 'forged'}`}>\n                                    <p>Video is {forgeryMessage.toLowerCase().includes('authentic') ? 'authentic' : 'forged'} with {forgeryMessage.match(/\\d+\\.\\d+/)?.[0]}% confidence</p>\n                                </div>\n                            )}\n                        </>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}